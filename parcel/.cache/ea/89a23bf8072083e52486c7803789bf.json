{"id":"server.js","dependencies":[{"name":"/Users/vidar/src/test/js/parcel/package.json","includedInParent":true,"mtime":1570640157485},{"name":"./lib/hello.js","loc":{"line":1,"column":22},"parent":"/Users/vidar/src/test/js/parcel/src/server.js","resolved":"/Users/vidar/src/test/js/parcel/src/lib/hello.js"}],"generated":{"js":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar hello = require('./lib/hello.js');\n\nfunction init() {\n  return _init.apply(this, arguments);\n}\n\nfunction _init() {\n  _init = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return new Promise(function (r) {\n              return setTimeout(r, 2000);\n            });\n\n          case 2:\n            hello('DONE');\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _init.apply(this, arguments);\n}\n\ninit();"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":5,"column":0},"source":"server.js","original":{"line":1,"column":0}},{"name":"hello","generated":{"line":5,"column":4},"source":"server.js","original":{"line":1,"column":6}},{"generated":{"line":5,"column":9},"source":"server.js","original":{"line":1,"column":11}},{"name":"require","generated":{"line":5,"column":12},"source":"server.js","original":{"line":1,"column":14}},{"generated":{"line":5,"column":19},"source":"server.js","original":{"line":1,"column":21}},{"generated":{"line":5,"column":20},"source":"server.js","original":{"line":1,"column":22}},{"generated":{"line":5,"column":36},"source":"server.js","original":{"line":1,"column":21}},{"generated":{"line":5,"column":37},"source":"server.js","original":{"line":1,"column":0}},{"name":"init","generated":{"line":7,"column":9},"source":"server.js","original":{"line":3,"column":15}},{"generated":{"line":14,"column":26},"source":"server.js","original":{"line":3,"column":0}},{"generated":{"line":15,"column":0},"source":"server.js","original":{"line":3,"column":0}},{"generated":{"line":16,"column":0},"source":"server.js","original":{"line":3,"column":0}},{"generated":{"line":17,"column":0},"source":"server.js","original":{"line":3,"column":0}},{"generated":{"line":18,"column":0},"source":"server.js","original":{"line":3,"column":0}},{"generated":{"line":19,"column":0},"source":"server.js","original":{"line":3,"column":0}},{"generated":{"line":20,"column":0},"source":"server.js","original":{"line":3,"column":0}},{"generated":{"line":20,"column":19},"source":"server.js","original":{"line":4,"column":8}},{"name":"Promise","generated":{"line":20,"column":23},"source":"server.js","original":{"line":4,"column":12}},{"generated":{"line":20,"column":30},"source":"server.js","original":{"line":4,"column":8}},{"generated":{"line":20,"column":31},"source":"server.js","original":{"line":4,"column":20}},{"name":"r","generated":{"line":20,"column":41},"source":"server.js","original":{"line":4,"column":20}},{"generated":{"line":20,"column":42},"source":"server.js","original":{"line":4,"column":21}},{"generated":{"line":21,"column":0},"source":"server.js","original":{"line":4,"column":21}},{"name":"setTimeout","generated":{"line":21,"column":21},"source":"server.js","original":{"line":4,"column":25}},{"generated":{"line":21,"column":31},"source":"server.js","original":{"line":4,"column":35}},{"name":"r","generated":{"line":21,"column":32},"source":"server.js","original":{"line":4,"column":36}},{"generated":{"line":21,"column":33},"source":"server.js","original":{"line":4,"column":35}},{"generated":{"line":21,"column":35},"source":"server.js","original":{"line":4,"column":39}},{"generated":{"line":21,"column":39},"source":"server.js","original":{"line":4,"column":35}},{"generated":{"line":21,"column":40},"source":"server.js","original":{"line":4,"column":21}},{"generated":{"line":22,"column":0},"source":"server.js","original":{"line":4,"column":21}},{"generated":{"line":22,"column":13},"source":"server.js","original":{"line":4,"column":8}},{"generated":{"line":22,"column":14},"source":"server.js","original":{"line":3,"column":0}},{"generated":{"line":24,"column":0},"source":"server.js","original":{"line":3,"column":0}},{"name":"hello","generated":{"line":25,"column":0},"source":"server.js","original":{"line":5,"column":2}},{"name":"hello","generated":{"line":25,"column":12},"source":"server.js","original":{"line":5,"column":2}},{"generated":{"line":25,"column":17},"source":"server.js","original":{"line":5,"column":7}},{"generated":{"line":25,"column":18},"source":"server.js","original":{"line":5,"column":8}},{"generated":{"line":25,"column":24},"source":"server.js","original":{"line":5,"column":7}},{"generated":{"line":25,"column":25},"source":"server.js","original":{"line":5,"column":2}},{"generated":{"line":27,"column":0},"source":"server.js","original":{"line":3,"column":0}},{"generated":{"line":28,"column":0},"source":"server.js","original":{"line":3,"column":0}},{"generated":{"line":29,"column":0},"source":"server.js","original":{"line":3,"column":0}},{"generated":{"line":30,"column":0},"source":"server.js","original":{"line":3,"column":0}},{"generated":{"line":31,"column":0},"source":"server.js","original":{"line":3,"column":0}},{"generated":{"line":32,"column":0},"source":"server.js","original":{"line":3,"column":0}},{"generated":{"line":33,"column":0},"source":"server.js","original":{"line":3,"column":0}},{"name":"init","generated":{"line":37,"column":0},"source":"server.js","original":{"line":8,"column":0}},{"generated":{"line":37,"column":4},"source":"server.js","original":{"line":8,"column":4}}],"sources":{"server.js":"const hello = require('./lib/hello.js')\n\nasync function init () {\n  await new Promise(r => setTimeout(r, 2000))\n  hello('DONE')\n}\n\ninit()\n"},"lineCount":null}},"error":null,"hash":"48ca942ed4ff39da56503c27f221320d","cacheData":{"env":{}}}